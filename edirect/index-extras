#!/bin/bash

# Public domain notice for all NCBI EDirect scripts is located at:
# https://www.ncbi.nlm.nih.gov/books/NBK179288/#chapter6.Public_Domain_Notice

while [ $# -gt 0 ]
do
  case "$1" in
    -path )
      shift
      ;;
    -* )
      exec >&2
      echo "$0: Unrecognized option $1"
      exit 1
      ;;
    * )
      break
      ;;
  esac
done

if [ "$#" -gt 0 ]
then
  target="$1"
  if [ ! -d "$target" ]
  then
    echo "Unable to find '$target' path"
    exit 1
  fi
  MASTER=$(cd "$target" && pwd)
  CONFIG=${MASTER}
  shift
else
  if [ -z "${EDIRECT_PUBMED_MASTER}" ]
  then
    echo "Must supply path to master archive area or set EDIRECT_PUBMED_MASTER environment variable"
    exit 1
  else
    MASTER="${EDIRECT_PUBMED_MASTER}"
    MASTER=${MASTER%/}
    if [ ! -d "${MASTER}" ]
    then
      echo "Unable to find '$MASTER' path"
      exit 1
    fi
  fi
fi

while [ $# -gt 0 ]
do
  case "$1" in
    -temp | -work | -working )
      shift
      ;;
    -* )
      exec >&2
      echo "$0: Unrecognized option $1"
      exit 1
      ;;
    * )
      break
      ;;
  esac
done

if [ "$#" -gt 0 ]
then
  working="$1"
  if [ ! -d "$working" ]
  then
    echo "Unable to find '$working' path"
    exit 1
  fi
  WORKING=$(cd "$working" && pwd)
  shift
else
  if [ -z "${EDIRECT_PUBMED_WORKING}" ]
  then
    WORKING=${MASTER}
  else
    WORKING="${EDIRECT_PUBMED_WORKING}"
    WORKING=${WORKING%/}
  fi
  if [ ! -d "${WORKING}" ]
  then
    echo "Unable to find '$WORKING' path"
    exit 1
  fi
fi

echo "MASTER $MASTER"

echo "WORKING $WORKING"

for dir in Archive Data Postings
do
  mkdir -p "$MASTER/$dir"
done

if [ -d "$MASTER/Sentinels" ]
then
  mv "$MASTER/Sentinels" "$MASTER/Archive"
else
  mkdir -p "$MASTER/Archive/Sentinels"
fi

if [ -d "$WORKING/Pubmed" ]
then
  mv "$WORKING/Pubmed" "$WORKING/Source"
else
  mkdir -p "$WORKING/Source"
fi

for dir in Extras Index Invert Merged Scratch
do
  mkdir -p "$WORKING/$dir"
done

for dir in Current Indexed Inverted
do
  mkdir -p "$WORKING/Scratch/$dir"
done

date

seconds_start=$(date "+%s")
cd "$WORKING/Extras"
echo "Downloading BioC Tables"
download-ncbi-data bioconcepts
echo "Downloading GeneRIFs"
download-ncbi-data generifs
echo "Downloading MeSH Tree"
download-ncbi-data meshtree
echo "Downloading Theme Data"
for bs in \
  "chemical-disease" \
  "chemical-gene" \
  "gene-disease" \
  "gene-gene"
do
  one=$(echo "part-i-$bs-path-theme-distributions.txt")
  if [ ! -f "$one" ]
  then
    if [ ! -f "$one.gz" ]
    then
      echo "part-i-$bs"
      curl -s "https://zenodo.org/record/3459420/files/$one.gz?download=1" > $one.gz
    fi
    gunzip -q "$one.gz"
  fi
  two=$(echo "part-ii-dependency-paths-$bs-sorted-with-themes.txt")
  if [ ! -f "$two" ]
  then
    if [ ! -f "$two.gz" ]
    then
      echo "part-ii-$bs"
      curl -s "https://zenodo.org/record/3459420/files/$two.gz?download=1" > $two.gz
    fi
    gunzip -q "$two.gz"
  fi
done
for fl in meshtree.txt meshname.txt genename.txt meshconv.xml geneconv.xml chemconv.xml diszconv.xml
do
  if [ ! -f "$MASTER/Data/$fl" ] && [ -f "$WORKING/Extras/$fl" ]
  then
    cp "$WORKING/Extras/$fl" "$MASTER/Data/$fl"
  fi
done
seconds_end=$(date "+%s")
seconds=$((seconds_end - seconds_start))
echo "$seconds seconds"
DWN=$seconds

seconds_start=$(date "+%s")
echo "Removing Previous Indices"
cd "$WORKING/Scratch/Indexed"
target="$WORKING/Scratch/Indexed"
find "$target" -name "*.e2x" -delete
find "$target" -name "*.e2x.gz" -delete
cd "$WORKING/Scratch/Inverted"
target="$WORKING/Scratch/Inverted"
find "$target" -name "*.inv" -delete
find "$target" -name "*.inv.gz" -delete
cd "$WORKING/Merged"
target="$WORKING/Merged"
find "$target" -name "*.mrg" -delete
find "$target" -name "*.mrg.gz" -delete
seconds_end=$(date "+%s")
seconds=$((seconds_end - seconds_start))
echo "$seconds seconds"
CLR=$seconds

seconds_start=$(date "+%s")
cd "$WORKING/Scratch/Indexed"
target="$WORKING/Scratch/Indexed"
find "$target" -name "*.e2x" -delete
find "$target" -name "*.e2x.gz" -delete
echo "Indexing BioC"
echo "chemical meshname biocchem disease meshname biocdisz gene genename biocgene" |
xargs -n 3 |
while read domain transform prefix
do
  gunzip -c "$WORKING/Extras/${domain}2pubtatorcentral.gz" |
  rchive -bioconcepts "$WORKING/Extras/$transform.txt" |
  rchive -gzip -thesis 5000000 "$target" "$prefix"
done
echo "Indexing GeneRIFs"
gunzip -c "$WORKING/Extras/generifs_basic.gz" |
rchive -generif "$WORKING/Extras/genename.txt" |
rchive -gzip -thesis 5000000 "$target" "generifs"
echo "Indexing Themes"
for bs in \
  "chemical-disease" \
  "chemical-gene" \
  "gene-disease" \
  "gene-gene"
do
  one=$(echo "$WORKING/Extras/part-i-$bs-path-theme-distributions.txt")
  two=$(echo "$WORKING/Extras/part-ii-dependency-paths-$bs-sorted-with-themes.txt")
  echo "$bs" |
  tr '[:lower:]' '[:upper:]' |
  while IFS=$'-' read fs sc
  do
    fs=${fs:0:2}
    sc=${sc:0:2}
    thr=$(echo "$fs$sc")
    rchive -themes "$one" "$two" "$thr"
  done
done > "$target/themes.tbl"
for fld in THME CONV
do
  tag=$(echo "$fld" | tr '[:upper:]' '[:lower:]')
  cat "$target/themes.tbl" |
  grep -w "$fld" |
  rchive -gzip -thesis 5000000 "$target" "$tag"
done
rm "$target/themes.tbl"
echo "Indexing Paths"
for bs in \
  "chemical-disease" \
  "chemical-gene" \
  "gene-disease" \
  "gene-gene"
do
  cat "$WORKING/Extras/part-ii-dependency-paths-$bs-sorted-with-themes.txt" |
  rchive -dpaths
done | rchive -gzip -thesis 5000000 "$target" "dpaths"
seconds_end=$(date "+%s")
seconds=$((seconds_end - seconds_start))
echo "$seconds seconds"
IDX=$seconds

seconds_start=$(date "+%s")
cd "$WORKING/Scratch/Indexed"
echo "Inverting Extra Indices"
target="$WORKING/Scratch/Inverted"
find "$target" -name "*.inv" -delete
find "$target" -name "*.inv.gz" -delete
for fl in *.e2x.gz
do
  base=${fl%.e2x.gz}
  echo "$base.inv"
  gunzip -c "$fl" |
  rchive -e2invert |
  gzip -1 > "$target/$base.inv.gz"
  sleep 1
done
seconds_end=$(date "+%s")
seconds=$((seconds_end - seconds_start))
echo "$seconds seconds"
INV=$seconds

seconds_start=$(date "+%s")
cd "$WORKING/Scratch/Inverted"
echo "Merging Extra Indices"
target="$WORKING/Merged"
find "$target" -name "*.mrg" -delete
find "$target" -name "*.mrg.gz" -delete
osname=`uname -s | sed -e 's/_NT-.*$/_NT/; s/^MINGW[0-9]*/CYGWIN/'`
if [ "$osname" = "CYGWIN_NT" -a -x /bin/cygpath ]
then
  target=`cygpath -w "$target"`
fi
target=${target%/}
rchive -gzip -merge "$target" *.inv.gz
seconds_end=$(date "+%s")
seconds=$((seconds_end - seconds_start))
echo "$seconds seconds"
MRG=$seconds

seconds_start=$(date "+%s")
cd "$WORKING/Merged"
echo "Producing Extra Postings"
target="$MASTER/Postings"
osname=`uname -s | sed -e 's/_NT-.*$/_NT/; s/^MINGW[0-9]*/CYGWIN/'`
if [ "$osname" = "CYGWIN_NT" -a -x /bin/cygpath ]
then
  target=`cygpath -w "$target"`
fi
target=${target%/}
for fl in *.mrg.gz
do
  echo "$fl"
done |
sort |
xargs -n 100 echo |
while read files
do
  # rchive -promote "$target" "CHEM DISZ GENE PATH THME CONV" $files
  rchive -promote "$target" "CHEM DISZ GENE THME CONV" $files
done
seconds_end=$(date "+%s")
seconds=$((seconds_end - seconds_start))
echo "$seconds seconds"
PST=$seconds

seconds_start=$(date "+%s")
cd "$WORKING/Scratch/Indexed"
# echo "Populating Link Archive"
# rchive -distribute "$MASTER/Archive" *.e2x.gz
seconds_end=$(date "+%s")
seconds=$((seconds_end - seconds_start))
# echo "$seconds seconds"
POP=$seconds

echo ""

echo "INDEX-EXTRAS"

echo "DWN $DWN seconds"
echo "CLR $CLR seconds"
echo "IDX $IDX seconds"
echo "INV $INV seconds"
echo "MRG $MRG seconds"
echo "PST $PST seconds"
# echo "POP $POP seconds"

echo ""

date
